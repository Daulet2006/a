package AandD.AandD.service;

import AandD.AandD.model.Investor;
import AandD.AandD.model.StockEvent;
import AandD.AandD.repository.InvestorRepository;
import AandD.AandD.strategy.InvestmentStrategyType;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class ObserverService {
    private final InvestorRepository investorRepository;
    private final SimulationLogService logService;

    public ObserverService(InvestorRepository investorRepository, SimulationLogService logService) {
        this.investorRepository = investorRepository;
        this.logService = logService;
    }

    public void notifyObservers(StockEvent event) {
        logService.clearLogs(); // –û—á–∏—â–∞–µ–º –ª–æ–≥–∏ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π —Å–∏–º—É–ª—è—Ü–∏–µ–π
        logService.addLog("üì¢ –†—ã–Ω–æ—á–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ: " + event.getStockName() + " | " + event.getPriceChange() + "% | " + event.getEvent());

        List<Investor> investors = investorRepository.findAll();
        for (Investor investor : investors) {
            if (investor.getStrategyType() == InvestmentStrategyType.CONSERVATIVE) {
                handleConservativeInvestor(investor, event);
            } else {
                handleAggressiveInvestor(investor, event);
            }
        }

        handleTradingBot(event);
    }

    private void handleConservativeInvestor(Investor investor, StockEvent event) {
        if (event.getPriceChange() <= -5) {
            logService.addLog("üè¶ " + investor.getName() + " (–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–π) –ø–æ–∫—É–ø–∞–µ—Ç " + event.getStockName() + " –ø–æ—Å–ª–µ –ø–∞–¥–µ–Ω–∏—è " + event.getPriceChange() + "%");
        }
    }

    private void handleAggressiveInvestor(Investor investor, StockEvent event) {
        if (event.getPriceChange() < -3) {
            logService.addLog("üî• " + investor.getName() + " (–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π) –ø–æ–∫—É–ø–∞–µ—Ç " + event.getStockName() + " –ø–æ—Å–ª–µ –ø–∞–¥–µ–Ω–∏—è " + event.getPriceChange() + "%");
        } else if (event.getPriceChange() > 3) {
            logService.addLog("üöÄ " + investor.getName() + " (–ê–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–π) –ø—Ä–æ–¥–∞—ë—Ç " + event.getStockName() + " –ø–æ—Å–ª–µ —Ä–æ—Å—Ç–∞ " + event.getPriceChange() + "%");
        }
    }

    private void handleTradingBot(StockEvent event) {
        if (event.getEvent().contains("—Å–∫–∞–Ω–¥–∞–ª") || event.getEvent().contains("‚ö†Ô∏è")) {
            logService.addLog("ü§ñ –ë–æ—Ç –ø—Ä–æ–¥–∞—ë—Ç –≤—Å–µ –∞–∫—Ü–∏–∏ " + event.getStockName() + " –∏–∑-–∑–∞ " + event.getEvent());
        } else if (event.getEvent().contains("–ø—Ä–æ—Ä—ã–≤") || event.getEvent().contains("üöÄ")) {
            logService.addLog("ü§ñ –ë–æ—Ç –ø–æ–∫—É–ø–∞–µ—Ç " + event.getStockName() + " –ø–æ—Å–ª–µ " + event.getEvent());
        }
    }
}
